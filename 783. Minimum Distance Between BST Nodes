# C++ (0 ms	9.6 MB)

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        TreeNode* curr = root;
        stack<TreeNode*> st;
        int minx = -1;
        int pro = INT_MAX;
        while (curr != nullptr || !st.empty()){
            while (curr != nullptr){
                st.push(curr);
                curr = curr->left;
            }
            TreeNode* p = st.top();
            st.pop();
            if (minx != -1) pro = min(pro, p->val - minx);
            minx = p->val;
            curr = p->right;
        }
        return pro;
    }
};
