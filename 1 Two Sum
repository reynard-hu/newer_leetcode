#python

class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """

        hashmap = {}
        for ind, num in enumerate(nums):
            num_1 = target - num
            if num_1 in hashmap:
                return [hashmap[num_1], ind]
            hashmap[num] = ind
        return None
        
#python 3

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        return (d := {}) or next(([d[num], i] for i, num in enumerate(nums) if num in d or d.setdefault(target - num, i) < 0))
